{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cardSlice = createSlice({\n  name: 'card',\n  initialState: {\n    items: [],\n    amount: 0\n  },\n  reducers: {\n    increment(state, action) {\n      const item = action.payload;\n      const existingItem = state.items.find(singleItem => singleItem.id === item.id);\n      if (!existingItem) {\n        state.items.push({\n          itemId: item.id,\n          price: item.price,\n          quantity: 1,\n          totalPrice: item.price,\n          name: item.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + item.price;\n      }\n    },\n    decrement(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(singleItem => singleItem.id === itemId);\n      state.amount--;\n      if (existingItem === 1) {\n        state.items.filter(singleItem => singleItem.id !== itemId);\n      } else {\n        existingItem.quantity--;\n        existingItem;\n      }\n    }\n  }\n});\nexport const {\n  reducer: cardReducer,\n  actions: cardActions\n} = cardSlice;","map":{"version":3,"names":["createSlice","cardSlice","name","initialState","items","amount","reducers","increment","state","action","item","payload","existingItem","find","singleItem","id","push","itemId","price","quantity","totalPrice","title","decrement","filter","reducer","cardReducer","actions","cardActions"],"sources":["C:/Users/Anna.Kawecka/Desktop/pleasework/01-starting-project (1)/01-starting-project/src/store/slices/card.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n const cardSlice = createSlice({\n  name:'card',\n  initialState:{\n    items:[],\n    amount:0\n  },\n  reducers:{\n    increment(state, action){\n     const item = action.payload;\n     const existingItem = state.items.find(singleItem=>singleItem.id===item.id)\n     if(!existingItem){\n      state.items.push({itemId: item.id, price: item.price, quantity: 1, totalPrice: item.price, name: item.title})\n     }else{\n      existingItem.quantity++;\n      existingItem.totalPrice = existingItem.totalPrice + item.price;\n      \n     }\n    \n    },\n      decrement(state, action){\n        const itemId = action.payload;\n        const existingItem = state.items.find(singleItem=>singleItem.id===itemId);\n        state.amount--;\n        if(existingItem===1){\n          state.items.filter(singleItem=>singleItem.id!==itemId)\n        }else{\n          existingItem.quantity--;\n          existingItem\n        }\n      },\n  }\n})\nexport const { reducer: cardReducer, actions: cardActions}= cardSlice"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC7C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACXC,KAAK,EAAC,EAAE;IACRC,MAAM,EAAC;EACT,CAAC;EACDC,QAAQ,EAAC;IACPC,SAAS,CAACC,KAAK,EAAEC,MAAM,EAAC;MACvB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,UAAU,IAAEA,UAAU,CAACC,EAAE,KAAGL,IAAI,CAACK,EAAE,CAAC;MAC1E,IAAG,CAACH,YAAY,EAAC;QAChBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UAACC,MAAM,EAAEP,IAAI,CAACK,EAAE;UAAEG,KAAK,EAAER,IAAI,CAACQ,KAAK;UAAEC,QAAQ,EAAE,CAAC;UAAEC,UAAU,EAAEV,IAAI,CAACQ,KAAK;UAAEhB,IAAI,EAAEQ,IAAI,CAACW;QAAK,CAAC,CAAC;MAC9G,CAAC,MAAI;QACJT,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,IAAI,CAACQ,KAAK;MAE/D;IAED,CAAC;IACCI,SAAS,CAACd,KAAK,EAAEC,MAAM,EAAC;MACtB,MAAMQ,MAAM,GAAGR,MAAM,CAACE,OAAO;MAC7B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,UAAU,IAAEA,UAAU,CAACC,EAAE,KAAGE,MAAM,CAAC;MACzET,KAAK,CAACH,MAAM,EAAE;MACd,IAAGO,YAAY,KAAG,CAAC,EAAC;QAClBJ,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAACT,UAAU,IAAEA,UAAU,CAACC,EAAE,KAAGE,MAAM,CAAC;MACxD,CAAC,MAAI;QACHL,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY;MACd;IACF;EACJ;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEY,OAAO,EAAEC,WAAW;EAAEC,OAAO,EAAEC;AAAW,CAAC,GAAE1B,SAAS"},"metadata":{},"sourceType":"module"}